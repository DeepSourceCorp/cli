apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  pipelineSpec:
    tasks:
      - name: bifrost-production-builds
        resources: {}
        taskSpec:
          metadata: {}
          stepTemplate:
            imagePullPolicy: 'IfNotPresent'
            env:
              - name: HOME
                value: /tekton/home
              - name: GOOGLE_APPLICATION_CREDENTIALS
                value: /secret/kaniko.json
              - name: GOOGLE_ANALYTICS_ID
                value: UA-125031134-1
              - name: TRIVY_EXIT_CODE
                value: '0'
              - name: TRIVY_CACHE_DIR
                value: /trivycache
              - name: TRIVY_SEVERITY
                value: HIGH,CRITICAL,MEDIUM,LOW
            envFrom:
              - secretRef:
                  name: jx-boot-job-env-vars
                  optional: true
              - secretRef:
                  name: zeal-secret
              - secretRef:
                  name: stripe-publishable-prod
              - secretRef:
                  name: bifrost-sentry
              - secretRef:
                  name: bifrost-sentry-auth
              - secretRef:
                  name: defectdojo-api
            name: ''
          steps:
            - image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
              name: git-clone
              resources: {}
              script: |
                #!/bin/sh
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
                git config --global user.name ${GIT_AUTHOR_NAME}
                git config --global user.email ${GIT_AUTHOR_EMAIL}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git fetch origin $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
                git checkout $(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
                git reset --hard $PULL_PULL_SHA
                echo "checked out revision: $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - image: ghcr.io/jenkins-x/jx-boot:3.2.157
              name: jx-variables
              resources: {}
              script: |
                #!/usr/bin/env sh
                jx gitops variables
                jx gitops pr variables
              workingDir: /workspace/source
            - image: ghcr.io/jenkins-x/jx-registry:0.1.1
              name: check-registry
              resources: {}
              workingDir: /workspace/source
            - name: warm-cache
              image: gcr.io/kaniko-project/warmer:latest
              args:
                - --cache-dir=/kanikocache
                - --image=node:14.19-alpine
                - --image=frolvlad/alpine-glibc:alpine-3.15_glibc-2.34
              workingDir: /workspace/source
            - image: gcr.io/kaniko-project/executor:v1.6.0-debug
              name: container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                /kaniko/executor --cache-repo=us.gcr.io/deepsource-dev/$REPO_NAME --tarPath=/workspace/source/$REPO_NAME.tar --context=/workspace/source --dockerfile=Dockerfile --destination=us.gcr.io/deepsource-production/$REPO_NAME:$PULL_BASE_REF --cache=false
              workingDir: /workspace/source
            - name: scan-image
              image: aquasec/trivy:0.36.1
              envFrom:
                - secretRef:
                    name: trivy-db-secret
              args:
                - image
                - -f
                - json
                - -o
                - bifrost-results.json
                - --input
                - bifrost.tar
              workingDir: /workspace/source
            - name: create-defectdojo-engagement
              image: us.gcr.io/deepsource-dev/crane:alpine
              script: |
                #!/bin/sh
                source .jx/variables.sh && \
                export DATE=`date +%Y-%m-%d` && \
                apk add curl && apk add git && \
                apk add jq && \
                curl -X 'GET' 'http://defectdojo.deepsource.icu/api/v2/engagements/?product=5&name=production' \
                -H 'accept: application/json' \
                -H 'Authorization: Token '"$DEFECTDOJO_API"'' > engagement_result.txt
                RESULT_LEN=$(cat engagement_result.txt | jq '.["results"] | length')
                rm engagement_result.txt && \
                if [[ $RESULT_LEN == 0 ]]; then
                  curl -X 'POST' \
                  'http://defectdojo.deepsource.icu/api/v2/engagements/' \
                  -H 'accept: application/json' -H 'Content-Type: multipart/form-data' \
                  -H 'Authorization: Token '"$DEFECTDOJO_API"'' \
                  -F 'name=production' \
                  -F 'minimum_severity=Info' \
                  -F 'branch_tag=production' \
                  -F 'product=5' \
                  -F 'target_start='"$DATE"'' \
                  -F 'target_end='"$DATE"'' \
                  -F 'status=In Progress' 
                else
                  exit 0
                fi
              workingDir: /workspace/source
            - name: push-defectdojo
              image: us.gcr.io/deepsource-dev/crane:alpine
              script: |
                #!/bin/sh
                source .jx/variables.sh && \
                export DATE=`date +%Y-%m-%d` && \
                apk add curl && apk add jq && \
                curl -X 'GET' \
                'http://defectdojo.deepsource.icu/api/v2/tests/?title='"$REPO_NAME"'-production' \
                -H 'accept: application/json' \
                -H 'Authorization: Token '"$DEFECTDOJO_API"'' > test_result.txt && \
                RESULT_LEN=$(cat test_result.txt | jq '.["results"] | length') && \
                rm test_result.txt && \
                if [[ $RESULT_LEN == 0 ]]; then
                  curl -X 'POST' \
                  'http://defectdojo.deepsource.icu/api/v2/import-scan/' \
                  -H 'accept: application/json' \
                  -H 'Content-Type: multipart/form-data' \
                  -H 'Authorization: Token '"$DEFECTDOJO_API"'' \
                  -F 'scan_date='"$DATE"'' \
                  -F 'minimum_severity=Info' \
                  -F 'active=true' \
                  -F 'verified=true' \
                  -F 'test_title='"$REPO_NAME"'-production' \
                  -F 'scan_type=Trivy Scan' \
                  -F 'file=@bifrost-results.json;type=application/json' \
                  -F 'product_type_name=deepsourcelabs' \
                  -F 'product_name='"$REPO_NAME"'' \
                  -F 'engagement_name=production' \
                  -F 'tags=vuln_scan,trivy' \
                  -F 'close_old_findings=true' \
                  -F 'close_old_findings_product_scope=false' \
                  -F 'push_to_jira=false' \
                  -F 'build_id='"$PULL_BASE_REF"'' \
                  -F 'create_finding_groups_for_all_findings=true' \
                  -F 'deduplication_on_engagement=true'
                else
                  curl -X 'POST' \
                  'http://defectdojo.deepsource.icu/api/v2/reimport-scan/' \
                  -H 'accept: application/json' \
                  -H 'Content-Type: multipart/form-data' \
                  -H 'Authorization: Token '"$DEFECTDOJO_API"'' \
                  -F 'minimum_severity=Info' \
                  -F 'active=true' \
                  -F 'verified=true' \
                  -F 'do_not_reactivate=true' \
                  -F 'scan_type=Trivy Scan' \
                  -F 'file=@bifrost-results.json;type=application/json' \
                  -F 'product_name='"$REPO_NAME"'' \
                  -F 'engagement_name=production' \
                  -F 'test_title='"$REPO_NAME"'-production' \
                  -F 'deduplication_on_engagement=true' \
                  -F 'push_to_jira=false' \
                  -F 'close_old_findings=true' \
                  -F 'close_old_findings_product_scope=false' \
                  -F 'create_finding_groups_for_all_findings=true'
                fi
              workingDir: /workspace/source
          workspaces:
            - name: kanikocache
              mountPath: /kanikocache
            - name: kaniko
              mountPath: /secret
            - name: zeal
            - name: stripe
            - name: sentry
            - name: sentry-auth
            - name: trivycache
              mountPath: /trivycache
            - name: defectdojo-api
        workspaces:
          - name: kanikocache
            workspace: bifrost-cache
            subPath: kanikocache
          - name: kaniko
            workspace: kaniko
          - name: zeal
            workspace: zeal
          - name: stripe
            workspace: stripe
          - name: sentry
            workspace: sentry
          - name: sentry-auth
            workspace: sentry-auth
          - name: trivycache
            workspace: bifrost-cache
            subPath: trivycache
          - name: defectdojo-api
            workspace: defectdojo-api
    workspaces:
      - name: bifrost-cache
      - name: kaniko
      - name: defectdojo-api
  workspaces:
    - name: bifrost-cache
      persistentVolumeClaim:
        claimName: bifrost-cache
    - name: kaniko
      secret:
        secretName: kaniko
    - name: zeal
      secret:
        secretName: zeal-secret
    - name: stripe
      secret:
        secretName: stripe-publishable-prod
    - name: sentry
      secret:
        secretName: bifrost-sentry
    - name: sentry-auth
      secret:
        secretName: bifrost-sentry-auth
    - name: secret
      secret:
        secretName: trivy-db-secret
    - name: defectdojo-api
      secret:
        secretName: defectdojo-api
  podTemplate:
    nodeSelector:
      scheduledBy: jx
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
