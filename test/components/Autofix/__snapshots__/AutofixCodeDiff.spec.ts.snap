// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[[ AutofixCodeDiff ]] renders the component with all prop options: {"isGroup":false,"changeSet":{"index.js":{"patches":[{"id":580653,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 1</span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">=&gt;</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 2</span>  <span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></pre></span>"},{"id":580654,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 7</span>  <span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></pre></span>"},{"id":580655,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">12</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">13</span><span class=\\"nx\\">bananas</span> <span class=\\"o\\">!=</span> <span class=\\"mi\\">1</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">14</span><span class=\\"nx\\">value</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">undefined</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">15</span><span class=\\"k\\">typeof</span> <span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"s1\\">&#39;undefined&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">16</span><span class=\\"s1\\">&#39;hello&#39;</span> <span class=\\"o\\">!=</span> <span class=\\"s1\\">&#39;world&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">17</span><span class=\\"mi\\">0</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">0</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">18</span><span class=\\"kc\\">true</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">19</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">null</span></span><span class=\\"ln\\">20</span>\\n<span class=\\"ln\\">21</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">22</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 8</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 9</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">10</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">11</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">12</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">13</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">14</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">15</span></span><span class=\\"ln\\">16</span>\\n<span class=\\"ln\\">17</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">18</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>"}],"issues":[{"title":"Found unused expressions","shortcode":"JS-0093"},{"title":"Use shorthand promise methods","shortcode":"JS-C1004"}]}},"selectedFiles":["index.py"],"isReadOnly":false,"selectedHunkIds":[580653,580655],"isGeneratedFromPr":false} 1`] = `
"<div class=\\"flex flex-col space-y-4\\">
  <div class=\\"relative flex flex-col border rounded-sm code border-slate-400\\">
    <!---->
    <div class=\\"flex items-center p-2 space-x-1 text-sm border-b bg-ink-300 border-slate-400\\">
      <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"index.js\\" truevalue=\\"true\\" modelvalue=\\"index.py\\" size=\\"small\\" class=\\"h-full\\"></zcheckbox-stub> <span class=\\"flex-1 font-medium text-vanilla-400\\">index.js</span>
      <!---->
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"580653\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>=&amp;gt;</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 2</span>  <span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"580654\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 7</span>  <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"580655\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>12</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>13</span><span class=&quot;nx&quot;>bananas</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;mi&quot;>1</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>14</span><span class=&quot;nx&quot;>value</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>undefined</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>15</span><span class=&quot;k&quot;>typeof</span> <span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;s1&quot;>&amp;#39;undefined&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>16</span><span class=&quot;s1&quot;>&amp;#39;hello&amp;#39;</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;s1&quot;>&amp;#39;world&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>17</span><span class=&quot;mi&quot;>0</span> <span class=&quot;o&quot;>==</span> <span class=&quot;mi&quot;>0</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>18</span><span class=&quot;kc&quot;>true</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>19</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>null</span></span><span class=&quot;ln&quot;>20</span>
<span class=&quot;ln&quot;>21</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>22</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 8</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 9</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>10</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>11</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>12</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>13</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>14</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>15</span></span><span class=&quot;ln&quot;>16</span>
<span class=&quot;ln&quot;>17</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>18</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
  </div>
</div>"
`;

exports[`[[ AutofixCodeDiff ]] renders the component with all prop options: {"isGroup":false,"changeSet":{"index.js":{"patches":[{"id":580653,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 1</span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">=&gt;</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 2</span>  <span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></pre></span>"},{"id":580654,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 7</span>  <span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></pre></span>"},{"id":580655,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">12</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">13</span><span class=\\"nx\\">bananas</span> <span class=\\"o\\">!=</span> <span class=\\"mi\\">1</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">14</span><span class=\\"nx\\">value</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">undefined</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">15</span><span class=\\"k\\">typeof</span> <span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"s1\\">&#39;undefined&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">16</span><span class=\\"s1\\">&#39;hello&#39;</span> <span class=\\"o\\">!=</span> <span class=\\"s1\\">&#39;world&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">17</span><span class=\\"mi\\">0</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">0</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">18</span><span class=\\"kc\\">true</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">19</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">null</span></span><span class=\\"ln\\">20</span>\\n<span class=\\"ln\\">21</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">22</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 8</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 9</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">10</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">11</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">12</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">13</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">14</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">15</span></span><span class=\\"ln\\">16</span>\\n<span class=\\"ln\\">17</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">18</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>"}],"issues":[{"title":"Found unused expressions","shortcode":"JS-0093"},{"title":"Use shorthand promise methods","shortcode":"JS-C1004"}]}},"selectedFiles":["index.py"],"isReadOnly":false,"selectedHunkIds":[580653,580655],"isGeneratedFromPr":true} 1`] = `
"<div class=\\"flex flex-col space-y-4\\">
  <div class=\\"relative flex flex-col border rounded-sm code border-slate-400\\">
    <!---->
    <div class=\\"flex items-center p-2 space-x-1 text-sm border-b bg-ink-300 border-slate-400\\">
      <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"index.js\\" truevalue=\\"true\\" modelvalue=\\"index.py\\" size=\\"small\\" class=\\"h-full\\"></zcheckbox-stub> <span class=\\"flex-1 font-medium text-vanilla-400\\">index.js</span> <span><span class=\\"text-sm text-vanilla-100 has-tooltip\\" data-original-title=\\"null\\">
              JS-0093
            </span>
      ,
      <span class=\\"text-sm text-vanilla-100 has-tooltip\\" data-original-title=\\"null\\">
              JS-C1004
            </span>

      </span>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"580653\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>=&amp;gt;</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 2</span>  <span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"580654\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 7</span>  <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"580655\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>12</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>13</span><span class=&quot;nx&quot;>bananas</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;mi&quot;>1</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>14</span><span class=&quot;nx&quot;>value</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>undefined</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>15</span><span class=&quot;k&quot;>typeof</span> <span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;s1&quot;>&amp;#39;undefined&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>16</span><span class=&quot;s1&quot;>&amp;#39;hello&amp;#39;</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;s1&quot;>&amp;#39;world&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>17</span><span class=&quot;mi&quot;>0</span> <span class=&quot;o&quot;>==</span> <span class=&quot;mi&quot;>0</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>18</span><span class=&quot;kc&quot;>true</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>19</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>null</span></span><span class=&quot;ln&quot;>20</span>
<span class=&quot;ln&quot;>21</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>22</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 8</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 9</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>10</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>11</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>12</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>13</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>14</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>15</span></span><span class=&quot;ln&quot;>16</span>
<span class=&quot;ln&quot;>17</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>18</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
  </div>
</div>"
`;

exports[`[[ AutofixCodeDiff ]] renders the component with all prop options: {"isGroup":false,"changeSet":{"index.js":{"patches":[{"id":580653,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 1</span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">=&gt;</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 2</span>  <span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></pre></span>"},{"id":580654,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 7</span>  <span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></pre></span>"},{"id":580655,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">12</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">13</span><span class=\\"nx\\">bananas</span> <span class=\\"o\\">!=</span> <span class=\\"mi\\">1</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">14</span><span class=\\"nx\\">value</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">undefined</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">15</span><span class=\\"k\\">typeof</span> <span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"s1\\">&#39;undefined&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">16</span><span class=\\"s1\\">&#39;hello&#39;</span> <span class=\\"o\\">!=</span> <span class=\\"s1\\">&#39;world&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">17</span><span class=\\"mi\\">0</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">0</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">18</span><span class=\\"kc\\">true</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">19</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">null</span></span><span class=\\"ln\\">20</span>\\n<span class=\\"ln\\">21</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">22</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 8</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 9</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">10</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">11</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">12</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">13</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">14</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">15</span></span><span class=\\"ln\\">16</span>\\n<span class=\\"ln\\">17</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">18</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>"}],"issues":[{"title":"Found unused expressions","shortcode":"JS-0093"},{"title":"Use shorthand promise methods","shortcode":"JS-C1004"}]}},"selectedFiles":["index.py"],"isReadOnly":true,"selectedHunkIds":[580653,580655],"isGeneratedFromPr":false} 1`] = `
"<div class=\\"flex flex-col space-y-4\\">
  <div class=\\"relative flex flex-col border rounded-sm code border-slate-400\\">
    <!---->
    <div class=\\"flex items-center p-2 space-x-1 text-sm border-b bg-ink-300 border-slate-400\\">
      <!----> <span class=\\"flex-1 font-medium text-vanilla-400\\">index.js</span>
      <!---->
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300\\">
        <!---->
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>=&amp;gt;</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 2</span>  <span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300\\">
        <!---->
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 7</span>  <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full\\">
      <div class=\\"flex items-start pt-4 bg-ink-300\\">
        <!---->
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>12</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>13</span><span class=&quot;nx&quot;>bananas</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;mi&quot;>1</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>14</span><span class=&quot;nx&quot;>value</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>undefined</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>15</span><span class=&quot;k&quot;>typeof</span> <span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;s1&quot;>&amp;#39;undefined&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>16</span><span class=&quot;s1&quot;>&amp;#39;hello&amp;#39;</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;s1&quot;>&amp;#39;world&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>17</span><span class=&quot;mi&quot;>0</span> <span class=&quot;o&quot;>==</span> <span class=&quot;mi&quot;>0</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>18</span><span class=&quot;kc&quot;>true</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>19</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>null</span></span><span class=&quot;ln&quot;>20</span>
<span class=&quot;ln&quot;>21</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>22</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 8</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 9</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>10</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>11</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>12</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>13</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>14</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>15</span></span><span class=&quot;ln&quot;>16</span>
<span class=&quot;ln&quot;>17</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>18</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
  </div>
</div>"
`;

exports[`[[ AutofixCodeDiff ]] renders the component with all prop options: {"isGroup":false,"changeSet":{"index.js":{"patches":[{"id":580653,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 1</span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">=&gt;</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 2</span>  <span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></pre></span>"},{"id":580654,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 7</span>  <span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></pre></span>"},{"id":580655,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">12</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">13</span><span class=\\"nx\\">bananas</span> <span class=\\"o\\">!=</span> <span class=\\"mi\\">1</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">14</span><span class=\\"nx\\">value</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">undefined</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">15</span><span class=\\"k\\">typeof</span> <span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"s1\\">&#39;undefined&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">16</span><span class=\\"s1\\">&#39;hello&#39;</span> <span class=\\"o\\">!=</span> <span class=\\"s1\\">&#39;world&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">17</span><span class=\\"mi\\">0</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">0</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">18</span><span class=\\"kc\\">true</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">19</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">null</span></span><span class=\\"ln\\">20</span>\\n<span class=\\"ln\\">21</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">22</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 8</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 9</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">10</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">11</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">12</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">13</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">14</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">15</span></span><span class=\\"ln\\">16</span>\\n<span class=\\"ln\\">17</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">18</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>"}],"issues":[{"title":"Found unused expressions","shortcode":"JS-0093"},{"title":"Use shorthand promise methods","shortcode":"JS-C1004"}]}},"selectedFiles":["index.py"],"isReadOnly":true,"selectedHunkIds":[580653,580655],"isGeneratedFromPr":true} 1`] = `
"<div class=\\"flex flex-col space-y-4\\">
  <div class=\\"relative flex flex-col border rounded-sm code border-slate-400\\">
    <!---->
    <div class=\\"flex items-center p-2 space-x-1 text-sm border-b bg-ink-300 border-slate-400\\">
      <!----> <span class=\\"flex-1 font-medium text-vanilla-400\\">index.js</span> <span><span class=\\"text-sm text-vanilla-100 has-tooltip\\" data-original-title=\\"null\\">
              JS-0093
            </span>
      ,
      <span class=\\"text-sm text-vanilla-100 has-tooltip\\" data-original-title=\\"null\\">
              JS-C1004
            </span>

      </span></div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300\\">
        <!---->
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>=&amp;gt;</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 2</span>  <span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300\\">
        <!---->
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 7</span>  <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full\\">
      <div class=\\"flex items-start pt-4 bg-ink-300\\">
        <!---->
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>12</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>13</span><span class=&quot;nx&quot;>bananas</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;mi&quot;>1</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>14</span><span class=&quot;nx&quot;>value</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>undefined</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>15</span><span class=&quot;k&quot;>typeof</span> <span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;s1&quot;>&amp;#39;undefined&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>16</span><span class=&quot;s1&quot;>&amp;#39;hello&amp;#39;</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;s1&quot;>&amp;#39;world&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>17</span><span class=&quot;mi&quot;>0</span> <span class=&quot;o&quot;>==</span> <span class=&quot;mi&quot;>0</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>18</span><span class=&quot;kc&quot;>true</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>19</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>null</span></span><span class=&quot;ln&quot;>20</span>
<span class=&quot;ln&quot;>21</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>22</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 8</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 9</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>10</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>11</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>12</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>13</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>14</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>15</span></span><span class=&quot;ln&quot;>16</span>
<span class=&quot;ln&quot;>17</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>18</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
  </div>
</div>"
`;

exports[`[[ AutofixCodeDiff ]] renders the component with all prop options: {"isGroup":true,"changeSet":{"index.js":{"patches":[{"id":580653,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 1</span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">=&gt;</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 2</span>  <span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></pre></span>"},{"id":580654,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 7</span>  <span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></pre></span>"},{"id":580655,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">12</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">13</span><span class=\\"nx\\">bananas</span> <span class=\\"o\\">!=</span> <span class=\\"mi\\">1</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">14</span><span class=\\"nx\\">value</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">undefined</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">15</span><span class=\\"k\\">typeof</span> <span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"s1\\">&#39;undefined&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">16</span><span class=\\"s1\\">&#39;hello&#39;</span> <span class=\\"o\\">!=</span> <span class=\\"s1\\">&#39;world&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">17</span><span class=\\"mi\\">0</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">0</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">18</span><span class=\\"kc\\">true</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">19</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">null</span></span><span class=\\"ln\\">20</span>\\n<span class=\\"ln\\">21</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">22</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 8</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 9</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">10</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">11</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">12</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">13</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">14</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">15</span></span><span class=\\"ln\\">16</span>\\n<span class=\\"ln\\">17</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">18</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>"}],"issues":[{"title":"Found unused expressions","shortcode":"JS-0093"},{"title":"Use shorthand promise methods","shortcode":"JS-C1004"}]}},"selectedFiles":["index.py"],"isReadOnly":false,"selectedHunkIds":[580653,580655],"isGeneratedFromPr":false} 1`] = `
"<div class=\\"flex flex-col space-y-4\\">
  <div class=\\"relative flex flex-col border rounded-sm code border-slate-400\\">
    <div class=\\"absolute w-6 h-0.5 bg-juniper transform -translate-x-full top-4\\"></div>
    <div class=\\"flex items-center p-2 space-x-1 text-sm border-b bg-ink-300 border-slate-400\\">
      <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"index.js\\" truevalue=\\"true\\" modelvalue=\\"index.py\\" size=\\"small\\" class=\\"h-full\\"></zcheckbox-stub> <span class=\\"flex-1 font-medium text-vanilla-400\\">index.js</span>
      <!---->
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"580653\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>=&amp;gt;</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 2</span>  <span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"580654\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 7</span>  <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"580655\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>12</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>13</span><span class=&quot;nx&quot;>bananas</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;mi&quot;>1</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>14</span><span class=&quot;nx&quot;>value</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>undefined</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>15</span><span class=&quot;k&quot;>typeof</span> <span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;s1&quot;>&amp;#39;undefined&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>16</span><span class=&quot;s1&quot;>&amp;#39;hello&amp;#39;</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;s1&quot;>&amp;#39;world&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>17</span><span class=&quot;mi&quot;>0</span> <span class=&quot;o&quot;>==</span> <span class=&quot;mi&quot;>0</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>18</span><span class=&quot;kc&quot;>true</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>19</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>null</span></span><span class=&quot;ln&quot;>20</span>
<span class=&quot;ln&quot;>21</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>22</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 8</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 9</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>10</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>11</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>12</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>13</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>14</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>15</span></span><span class=&quot;ln&quot;>16</span>
<span class=&quot;ln&quot;>17</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>18</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
  </div>
</div>"
`;

exports[`[[ AutofixCodeDiff ]] renders the component with all prop options: {"isGroup":true,"changeSet":{"index.js":{"patches":[{"id":580653,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 1</span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">=&gt;</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 2</span>  <span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></pre></span>"},{"id":580654,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 7</span>  <span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></pre></span>"},{"id":580655,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">12</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">13</span><span class=\\"nx\\">bananas</span> <span class=\\"o\\">!=</span> <span class=\\"mi\\">1</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">14</span><span class=\\"nx\\">value</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">undefined</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">15</span><span class=\\"k\\">typeof</span> <span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"s1\\">&#39;undefined&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">16</span><span class=\\"s1\\">&#39;hello&#39;</span> <span class=\\"o\\">!=</span> <span class=\\"s1\\">&#39;world&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">17</span><span class=\\"mi\\">0</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">0</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">18</span><span class=\\"kc\\">true</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">19</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">null</span></span><span class=\\"ln\\">20</span>\\n<span class=\\"ln\\">21</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">22</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 8</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 9</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">10</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">11</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">12</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">13</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">14</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">15</span></span><span class=\\"ln\\">16</span>\\n<span class=\\"ln\\">17</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">18</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>"}],"issues":[{"title":"Found unused expressions","shortcode":"JS-0093"},{"title":"Use shorthand promise methods","shortcode":"JS-C1004"}]}},"selectedFiles":["index.py"],"isReadOnly":false,"selectedHunkIds":[580653,580655],"isGeneratedFromPr":true} 1`] = `
"<div class=\\"flex flex-col space-y-4\\">
  <div class=\\"relative flex flex-col border rounded-sm code border-slate-400\\">
    <div class=\\"absolute w-6 h-0.5 bg-juniper transform -translate-x-full top-4\\"></div>
    <div class=\\"flex items-center p-2 space-x-1 text-sm border-b bg-ink-300 border-slate-400\\">
      <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"index.js\\" truevalue=\\"true\\" modelvalue=\\"index.py\\" size=\\"small\\" class=\\"h-full\\"></zcheckbox-stub> <span class=\\"flex-1 font-medium text-vanilla-400\\">index.js</span> <span><span class=\\"text-sm text-vanilla-100 has-tooltip\\" data-original-title=\\"null\\">
              JS-0093
            </span>
      ,
      <span class=\\"text-sm text-vanilla-100 has-tooltip\\" data-original-title=\\"null\\">
              JS-C1004
            </span>

      </span>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"580653\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>=&amp;gt;</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 2</span>  <span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"580654\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 7</span>  <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"580655\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>12</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>13</span><span class=&quot;nx&quot;>bananas</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;mi&quot;>1</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>14</span><span class=&quot;nx&quot;>value</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>undefined</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>15</span><span class=&quot;k&quot;>typeof</span> <span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;s1&quot;>&amp;#39;undefined&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>16</span><span class=&quot;s1&quot;>&amp;#39;hello&amp;#39;</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;s1&quot;>&amp;#39;world&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>17</span><span class=&quot;mi&quot;>0</span> <span class=&quot;o&quot;>==</span> <span class=&quot;mi&quot;>0</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>18</span><span class=&quot;kc&quot;>true</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>19</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>null</span></span><span class=&quot;ln&quot;>20</span>
<span class=&quot;ln&quot;>21</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>22</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 8</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 9</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>10</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>11</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>12</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>13</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>14</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>15</span></span><span class=&quot;ln&quot;>16</span>
<span class=&quot;ln&quot;>17</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>18</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
  </div>
</div>"
`;

exports[`[[ AutofixCodeDiff ]] renders the component with all prop options: {"isGroup":true,"changeSet":{"index.js":{"patches":[{"id":580653,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 1</span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">=&gt;</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 2</span>  <span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></pre></span>"},{"id":580654,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 7</span>  <span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></pre></span>"},{"id":580655,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">12</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">13</span><span class=\\"nx\\">bananas</span> <span class=\\"o\\">!=</span> <span class=\\"mi\\">1</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">14</span><span class=\\"nx\\">value</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">undefined</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">15</span><span class=\\"k\\">typeof</span> <span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"s1\\">&#39;undefined&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">16</span><span class=\\"s1\\">&#39;hello&#39;</span> <span class=\\"o\\">!=</span> <span class=\\"s1\\">&#39;world&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">17</span><span class=\\"mi\\">0</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">0</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">18</span><span class=\\"kc\\">true</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">19</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">null</span></span><span class=\\"ln\\">20</span>\\n<span class=\\"ln\\">21</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">22</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 8</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 9</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">10</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">11</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">12</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">13</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">14</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">15</span></span><span class=\\"ln\\">16</span>\\n<span class=\\"ln\\">17</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">18</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>"}],"issues":[{"title":"Found unused expressions","shortcode":"JS-0093"},{"title":"Use shorthand promise methods","shortcode":"JS-C1004"}]}},"selectedFiles":["index.py"],"isReadOnly":true,"selectedHunkIds":[580653,580655],"isGeneratedFromPr":false} 1`] = `
"<div class=\\"flex flex-col space-y-4\\">
  <div class=\\"relative flex flex-col border rounded-sm code border-slate-400\\">
    <div class=\\"absolute w-6 h-0.5 bg-juniper transform -translate-x-full top-4\\"></div>
    <div class=\\"flex items-center p-2 space-x-1 text-sm border-b bg-ink-300 border-slate-400\\">
      <!----> <span class=\\"flex-1 font-medium text-vanilla-400\\">index.js</span>
      <!---->
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300\\">
        <!---->
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>=&amp;gt;</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 2</span>  <span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300\\">
        <!---->
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 7</span>  <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full\\">
      <div class=\\"flex items-start pt-4 bg-ink-300\\">
        <!---->
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>12</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>13</span><span class=&quot;nx&quot;>bananas</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;mi&quot;>1</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>14</span><span class=&quot;nx&quot;>value</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>undefined</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>15</span><span class=&quot;k&quot;>typeof</span> <span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;s1&quot;>&amp;#39;undefined&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>16</span><span class=&quot;s1&quot;>&amp;#39;hello&amp;#39;</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;s1&quot;>&amp;#39;world&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>17</span><span class=&quot;mi&quot;>0</span> <span class=&quot;o&quot;>==</span> <span class=&quot;mi&quot;>0</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>18</span><span class=&quot;kc&quot;>true</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>19</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>null</span></span><span class=&quot;ln&quot;>20</span>
<span class=&quot;ln&quot;>21</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>22</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 8</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 9</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>10</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>11</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>12</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>13</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>14</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>15</span></span><span class=&quot;ln&quot;>16</span>
<span class=&quot;ln&quot;>17</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>18</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
  </div>
</div>"
`;

exports[`[[ AutofixCodeDiff ]] renders the component with all prop options: {"isGroup":true,"changeSet":{"index.js":{"patches":[{"id":580653,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 1</span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">=&gt;</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 2</span>  <span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></pre></span>"},{"id":580654,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 3</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 4</span>\\n<span class=\\"ln\\"> 5</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 6</span><span class=\\"c1\\"></span><span class=\\"k\\">new</span> <span class=\\"nb\\">Promise</span><span class=\\"p\\">(</span><span class=\\"kd\\">function</span> <span class=\\"p\\">(</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">,</span> <span class=\\"nx\\">reject</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 7</span>  <span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span></span><span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 1</span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">resolve</span><span class=\\"p\\">(</span><span class=\\"nx\\">getItem</span><span class=\\"p\\">(</span><span class=\\"p\\">)</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 2</span>\\n<span class=\\"ln\\"> 3</span><span class=\\"c1\\">// 3. Use shorthand promise methodsJS-C1004</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span></span>\\n\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></pre></span>"},{"id":580655,"action":"modified","before_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 8</span><span class=\\"p\\">}</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 9</span>\\n<span class=\\"ln\\">10</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">11</span><span class=\\"c1\\"></span><span class=\\"nx\\">a</span> <span class=\\"o\\">==</span> <span class=\\"nx\\">b</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">12</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">13</span><span class=\\"nx\\">bananas</span> <span class=\\"o\\">!=</span> <span class=\\"mi\\">1</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">14</span><span class=\\"nx\\">value</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">undefined</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">15</span><span class=\\"k\\">typeof</span> <span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"s1\\">&#39;undefined&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">16</span><span class=\\"s1\\">&#39;hello&#39;</span> <span class=\\"o\\">!=</span> <span class=\\"s1\\">&#39;world&#39;</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">17</span><span class=\\"mi\\">0</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">0</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">18</span><span class=\\"kc\\">true</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">true</span></span><span class=\\"hlr\\" data-code-marker=\\"-\\"><span class=\\"ln\\">19</span><span class=\\"nx\\">c</span> <span class=\\"o\\">==</span> <span class=\\"kc\\">null</span></span><span class=\\"ln\\">20</span>\\n<span class=\\"ln\\">21</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">22</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>","after_html":"<div class=\\"highlight\\"><pre><span class=\\"ln\\"> 4</span><span class=\\"c1\\"></span><span class=\\"nb\\">Promise</span><span class=\\"p\\">.</span><span class=\\"nx\\">reject</span><span class=\\"p\\">(</span><span class=\\"s2\\">&#34;oops&#34;</span><span class=\\"p\\">)</span>\\n<span class=\\"ln\\"> 5</span>\\n<span class=\\"ln\\"> 6</span><span class=\\"c1\\">// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>\\n<span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 7</span><span class=\\"c1\\"></span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 8</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\"> 9</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">10</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">11</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">12</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">13</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">14</span></span><span class=\\"hlg\\" data-code-marker=\\"+\\"><span class=\\"ln\\">15</span></span><span class=\\"ln\\">16</span>\\n<span class=\\"ln\\">17</span><span class=\\"c1\\">// 5. Avoid using multiline stringsJS-C1000</span>\\n<span class=\\"ln\\">18</span><span class=\\"c1\\"></span><span class=\\"kr\\">const</span> <span class=\\"nx\\">x</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&#34;Line 1 \\\\</span></pre></span>"}],"issues":[{"title":"Found unused expressions","shortcode":"JS-0093"},{"title":"Use shorthand promise methods","shortcode":"JS-C1004"}]}},"selectedFiles":["index.py"],"isReadOnly":true,"selectedHunkIds":[580653,580655],"isGeneratedFromPr":true} 1`] = `
"<div class=\\"flex flex-col space-y-4\\">
  <div class=\\"relative flex flex-col border rounded-sm code border-slate-400\\">
    <div class=\\"absolute w-6 h-0.5 bg-juniper transform -translate-x-full top-4\\"></div>
    <div class=\\"flex items-center p-2 space-x-1 text-sm border-b bg-ink-300 border-slate-400\\">
      <!----> <span class=\\"flex-1 font-medium text-vanilla-400\\">index.js</span> <span><span class=\\"text-sm text-vanilla-100 has-tooltip\\" data-original-title=\\"null\\">
              JS-0093
            </span>
      ,
      <span class=\\"text-sm text-vanilla-100 has-tooltip\\" data-original-title=\\"null\\">
              JS-C1004
            </span>

      </span></div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300\\">
        <!---->
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>=&amp;gt;</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 2</span>  <span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300\\">
        <!---->
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 3</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 4</span>
<span class=&quot;ln&quot;> 5</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 7</span>  <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 2</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full\\">
      <div class=\\"flex items-start pt-4 bg-ink-300\\">
        <!---->
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 8</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 9</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>11</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>12</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>13</span><span class=&quot;nx&quot;>bananas</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;mi&quot;>1</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>14</span><span class=&quot;nx&quot;>value</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>undefined</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>15</span><span class=&quot;k&quot;>typeof</span> <span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;s1&quot;>&amp;#39;undefined&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>16</span><span class=&quot;s1&quot;>&amp;#39;hello&amp;#39;</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;s1&quot;>&amp;#39;world&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>17</span><span class=&quot;mi&quot;>0</span> <span class=&quot;o&quot;>==</span> <span class=&quot;mi&quot;>0</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>18</span><span class=&quot;kc&quot;>true</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>19</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>null</span></span><span class=&quot;ln&quot;>20</span>
<span class=&quot;ln&quot;>21</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>22</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 4</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 8</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 9</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>10</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>11</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>12</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>13</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>14</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>15</span></span><span class=&quot;ln&quot;>16</span>
<span class=&quot;ln&quot;>17</span><span class=&quot;c1&quot;>// 5. Avoid using multiline stringsJS-C1000</span>
<span class=&quot;ln&quot;>18</span><span class=&quot;c1&quot;></span><span class=&quot;kr&quot;>const</span> <span class=&quot;nx&quot;>x</span> <span class=&quot;o&quot;>=</span> <span class=&quot;s2&quot;>&amp;#34;Line 1 \\\\</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
  </div>
</div>"
`;

exports[`[[ AutofixCodeDiff ]] shows the remaining count when the issue codes exceed a count of 3 1`] = `
"<div class=\\"flex flex-col space-y-4\\">
  <div class=\\"relative flex flex-col border rounded-sm code border-slate-400\\">
    <!---->
    <div class=\\"flex items-center p-2 space-x-1 text-sm border-b bg-ink-300 border-slate-400\\">
      <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"index-2.js\\" truevalue=\\"true\\" modelvalue=\\"index.py\\" size=\\"small\\" class=\\"h-full\\"></zcheckbox-stub> <span class=\\"flex-1 font-medium text-vanilla-400\\">index-2.js</span> <span><span class=\\"text-sm text-vanilla-100 has-tooltip\\" data-original-title=\\"null\\">
              JS-0093
            </span>
      ,
      <span class=\\"text-sm text-vanilla-100 has-tooltip\\" data-original-title=\\"null\\">
              JS-0236
            </span>
      ,
      <span class=\\"text-sm text-vanilla-100 has-tooltip\\" data-original-title=\\"null\\">
              JS-C1004
            </span>

      <span>&amp; 1 more</span></span>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"10716\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;c1&quot;>// 1. Found leading or trailing decimal points in numeric literalsJS-0065</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 2</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>let</span> <span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>.</span><span class=&quot;mi&quot;>5</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;> 3</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;mf&quot;>2.</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 4</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;o&quot;>-</span><span class=&quot;p&quot;>.</span><span class=&quot;mi&quot;>7</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 5</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;c1&quot;>// 1. Found leading or trailing decimal points in numeric literalsJS-0065</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 2</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>let</span> <span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;mf&quot;>0.5</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;> 3</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;mf&quot;>2.0</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 4</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;o&quot;>-</span><span class=&quot;mf&quot;>0.7</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 5</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"10717\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;c1&quot;>// 1. Found leading or trailing decimal points in numeric literalsJS-0065</span>
<span class=&quot;ln&quot;> 2</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>let</span> <span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>.</span><span class=&quot;mi&quot;>5</span><span class=&quot;p&quot;>;</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 3</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;mf&quot;>2.</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;> 4</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;o&quot;>-</span><span class=&quot;p&quot;>.</span><span class=&quot;mi&quot;>7</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 2. Found unnecessary computed property keys in object literalsJS-0236</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;c1&quot;>// 1. Found leading or trailing decimal points in numeric literalsJS-0065</span>
<span class=&quot;ln&quot;> 2</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>let</span> <span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;mf&quot;>0.5</span><span class=&quot;p&quot;>;</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 3</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;mf&quot;>2.0</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;> 4</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;o&quot;>-</span><span class=&quot;mf&quot;>0.7</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 2. Found unnecessary computed property keys in object literalsJS-0236</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"10718\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;c1&quot;>// 1. Found leading or trailing decimal points in numeric literalsJS-0065</span>
<span class=&quot;ln&quot;> 2</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>let</span> <span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>.</span><span class=&quot;mi&quot;>5</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;mf&quot;>2.</span><span class=&quot;p&quot;>;</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 4</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;o&quot;>-</span><span class=&quot;p&quot;>.</span><span class=&quot;mi&quot;>7</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 2. Found unnecessary computed property keys in object literalsJS-0236</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;0&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 1</span><span class=&quot;c1&quot;>// 1. Found leading or trailing decimal points in numeric literalsJS-0065</span>
<span class=&quot;ln&quot;> 2</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>let</span> <span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;mf&quot;>0.5</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 3</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;mf&quot;>2.0</span><span class=&quot;p&quot;>;</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 4</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;o&quot;>-</span><span class=&quot;mf&quot;>0.7</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 2. Found unnecessary computed property keys in object literalsJS-0236</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;0&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"10719\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 4</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;o&quot;>-</span><span class=&quot;p&quot;>.</span><span class=&quot;mi&quot;>7</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 2. Found unnecessary computed property keys in object literalsJS-0236</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;0&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;> 8</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;0+1,234&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 9</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;mi&quot;>0</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 4</span><span class=&quot;nx&quot;>num</span> <span class=&quot;o&quot;>=</span> <span class=&quot;o&quot;>-</span><span class=&quot;mf&quot;>0.7</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 2. Found unnecessary computed property keys in object literalsJS-0236</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;0&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;> 8</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;0+1,234&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 9</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;mi&quot;>0</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"10720\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 2. Found unnecessary computed property keys in object literalsJS-0236</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;0&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 8</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;0+1,234&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;> 9</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;mi&quot;>0</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span><span class=&quot;p&quot;>}</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 5</span>
<span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 2. Found unnecessary computed property keys in object literalsJS-0236</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;0&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 8</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;0+1,234&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;> 9</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;mi&quot;>0</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span><span class=&quot;p&quot;>}</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"10721\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 2. Found unnecessary computed property keys in object literalsJS-0236</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;0&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 8</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;0+1,234&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;> 9</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;mi&quot;>0</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;>10</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span><span class=&quot;p&quot;>}</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>12</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 6</span><span class=&quot;c1&quot;>// 2. Found unnecessary computed property keys in object literalsJS-0236</span>
<span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;0&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 8</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;0+1,234&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;> 9</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;mi&quot;>0</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;>10</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span><span class=&quot;p&quot;>}</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>12</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"10722\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;0&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 8</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;0+1,234&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 9</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;mi&quot;>0</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>10</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;>11</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span><span class=&quot;p&quot;>}</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>12</span>
<span class=&quot;ln&quot;>13</span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>=&amp;gt;</span> <span class=&quot;p&quot;>{</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 7</span><span class=&quot;c1&quot;></span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;0&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 8</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;0+1,234&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 9</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;mi&quot;>0</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>10</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;>11</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span><span class=&quot;p&quot;>}</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>12</span>
<span class=&quot;ln&quot;>13</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"10723\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 8</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;0+1,234&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 9</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;mi&quot;>0</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>11</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span><span class=&quot;p&quot;>}</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;>12</span>
<span class=&quot;ln&quot;>13</span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>=&amp;gt;</span> <span class=&quot;p&quot;>{</span>
<span class=&quot;ln&quot;>14</span>  <span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;> 8</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;0+1,234&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;> 9</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;mi&quot;>0</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>10</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>11</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span><span class=&quot;p&quot;>}</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span></span><span class=&quot;ln&quot;>12</span>
<span class=&quot;ln&quot;>13</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;>14</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"10724\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;>10</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;p&quot;>[</span><span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>]</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span><span class=&quot;p&quot;>}</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>12</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>13</span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>=&amp;gt;</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>14</span>  <span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>15</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;>16</span>
<span class=&quot;ln&quot;>17</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;>18</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;>10</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;o&quot;>:</span> <span class=&quot;mi&quot;>0</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>11</span><span class=&quot;kd&quot;>var</span> <span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>=</span> <span class=&quot;p&quot;>{</span> <span class=&quot;s1&quot;>&amp;#39;x&amp;#39;</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span><span class=&quot;p&quot;>}</span> <span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>;</span>
<span class=&quot;ln&quot;>12</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>13</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;>14</span>
<span class=&quot;ln&quot;>15</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;ln&quot;>16</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full border-b-2 border-slate-400\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"10725\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;>15</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;>16</span>
<span class=&quot;ln&quot;>17</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>18</span><span class=&quot;c1&quot;></span><span class=&quot;k&quot;>new</span> <span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>(</span><span class=&quot;kd&quot;>function</span> <span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>,</span> <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>)</span> <span class=&quot;p&quot;>{</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>19</span>  <span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>20</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span></span><span class=&quot;ln&quot;>21</span>
<span class=&quot;ln&quot;>22</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;>23</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;>13</span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>resolve</span><span class=&quot;p&quot;>(</span><span class=&quot;nx&quot;>getItem</span><span class=&quot;p&quot;>(</span><span class=&quot;p&quot;>)</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;>14</span>
<span class=&quot;ln&quot;>15</span><span class=&quot;c1&quot;>// 3. Use shorthand promise methodsJS-C1004</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>16</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span></span>

<span class=&quot;ln&quot;>17</span>
<span class=&quot;ln&quot;>18</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;ln&quot;>19</span><span class=&quot;c1&quot;></span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
    <div class=\\"flex w-full\\">
      <div class=\\"flex items-start pt-4 bg-ink-300 pl-2\\">
        <zcheckbox-stub label=\\"\\" name=\\"\\" value=\\"10726\\" truevalue=\\"true\\" modelvalue=\\"580653,580655\\" size=\\"small\\" font-size=\\"base\\" spacing=\\"4\\"></zcheckbox-stub>
      </div>
      <div class=\\"grid w-full grid-cols-2\\">
        <div class=\\"col-span-1 border-r after_html border-slate-400 bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;>20</span><span class=&quot;p&quot;>}</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;>21</span>
<span class=&quot;ln&quot;>22</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>23</span><span class=&quot;c1&quot;></span><span class=&quot;nx&quot;>a</span> <span class=&quot;o&quot;>==</span> <span class=&quot;nx&quot;>b</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>24</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>25</span><span class=&quot;nx&quot;>bananas</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;mi&quot;>1</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>26</span><span class=&quot;nx&quot;>value</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>undefined</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>27</span><span class=&quot;k&quot;>typeof</span> <span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;s1&quot;>&amp;#39;undefined&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>28</span><span class=&quot;s1&quot;>&amp;#39;hello&amp;#39;</span> <span class=&quot;o&quot;>!=</span> <span class=&quot;s1&quot;>&amp;#39;world&amp;#39;</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>29</span><span class=&quot;mi&quot;>0</span> <span class=&quot;o&quot;>==</span> <span class=&quot;mi&quot;>0</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>30</span><span class=&quot;kc&quot;>true</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>true</span></span><span class=&quot;hlr&quot; data-code-marker=&quot;-&quot;><span class=&quot;ln&quot;>31</span><span class=&quot;nx&quot;>c</span> <span class=&quot;o&quot;>==</span> <span class=&quot;kc&quot;>null</span></span></pre></span>\\"></zcode-stub>
        </div>
        <div class=\\"col-span-1 before_html bg-ink-300 opacity-20\\">
          <zcode-stub content=\\"<div class=&quot;highlight&quot;><pre><span class=&quot;ln&quot;>16</span><span class=&quot;c1&quot;></span><span class=&quot;nb&quot;>Promise</span><span class=&quot;p&quot;>.</span><span class=&quot;nx&quot;>reject</span><span class=&quot;p&quot;>(</span><span class=&quot;s2&quot;>&amp;#34;oops&amp;#34;</span><span class=&quot;p&quot;>)</span>
<span class=&quot;ln&quot;>17</span>
<span class=&quot;ln&quot;>18</span><span class=&quot;c1&quot;>// 4. Prefer the use of \`===\` and \`!==\` over \`==\` and \`!=\`JS-V009</span>
<span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>19</span><span class=&quot;c1&quot;></span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>20</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>21</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>22</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>23</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>24</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>25</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>26</span></span><span class=&quot;hlg&quot; data-code-marker=&quot;+&quot;><span class=&quot;ln&quot;>27</span></span></pre></span>\\"></zcode-stub>
        </div>
      </div>
    </div>
  </div>
</div>"
`;
