package dryrun

import (
	"encoding/json"

	"github.com/deepsourcelabs/cli/analysis/processor"
	"github.com/deepsourcelabs/cli/analysis/processor/processors"
	"github.com/deepsourcelabs/cli/types"
)

// processAnalyzerReport processes the analysis report generated by the Analyzer
func (a *AnalyzerDryRun) processAnalyzerReport(reportBytes []byte) (types.AnalysisResult, error) {
	report := types.AnalyzerReport{}
	skipCQProcessor := processors.ProcSkipCQ{}
	sourceCodeHighlightingProcessor := processors.ProcSourceCodeLoad{}

	// Initializing the processors using the IProcessor interface provided by the `processor` package
	var skip_cq, source_code_load processor.IProcessor
	skip_cq = skipCQProcessor
	source_code_load = sourceCodeHighlightingProcessor

	processor := processor.ReportProcessor{
		LocalSourcePath:   a.SourcePath,
		ContainerCodePath: a.Client.AnalysisOpts.ContainerCodePath,
		Processors:        []processor.IProcessor{skip_cq, source_code_load},
	}

	// Generate the silencers regexMap.
	processors.GenerateSilencersRegexMap()

	if err := json.Unmarshal(reportBytes, &report); err != nil {
		return types.AnalysisResult{}, err
	}

	processor.Report = report
	analysisResult := processor.Process()
	return analysisResult, nil
}
