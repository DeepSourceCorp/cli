package run

import (
	"encoding/json"
	"fmt"

	"github.com/deepsourcelabs/cli/analysis/processor"
	"github.com/deepsourcelabs/cli/command/analyzer/run/processors"
	"github.com/deepsourcelabs/cli/types"
)

// processAnalyzerReport processes the analysis report generated by the Analyzer
func (a *AnalyzerDryRun) processAnalyzerReport(reportBytes []byte) (types.AnalysisResult, error) {
	report := types.AnalyzerReport{}
	skipCQProcessor := processors.ProcSkipCQ{}
	sourceCodeHighlightingProcessor := processors.ProcSourceCodeLoad{}

	var processor1, processor2 processor.IProcessor
	processor1 = skipCQProcessor
	processor2 = sourceCodeHighlightingProcessor

	// Convert the analysis result from the LSP based format to the default DeepSource format
	processor := processor.ProcessAnalysisResults{
		CodePath:   a.SourcePath,
		Processors: []processor.IProcessor{processor1, processor2},
	}

	// Generate the silencers regexMap.
	processors.GenerateSilencersRegexMap()

	if err := json.Unmarshal(reportBytes, &report); err != nil {
		fmt.Println(err)
		return types.AnalysisResult{}, err
	}

	processor.Report = report
	processor.ProcessAnalysisResult()
	return processor.AnalysisResult, nil
}
